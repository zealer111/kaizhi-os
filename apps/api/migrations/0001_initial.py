# Generated by Django 2.0.2 on 2018-05-31 11:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=19, verbose_name='手机号')),
                ('auth_code', models.CharField(max_length=10, verbose_name='验证码')),
                ('fail_time', models.DateTimeField(verbose_name='失效时间')),
                ('type', models.SmallIntegerField(choices=[(1, '注册'), (2, '忘记密码')], default=1, verbose_name='验证类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '手机验证码信息',
                'verbose_name_plural': '手机验证码列表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(max_length=19, verbose_name='图片')),
                ('url', models.CharField(max_length=10, verbose_name='链接地址')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '课程轮播图信息表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Branch_Package',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('create_type', models.IntegerField(choices=[(0, '个人'), (1, '组织')], default=0, verbose_name='创建类型')),
                ('p_type', models.IntegerField(choices=[(0, '课程'), (1, '作业'), (2, '讨论')], default=0, verbose_name='卡包类型')),
                ('role', models.IntegerField(choices=[(0, '创建者'), (1, '协作者')], default=0, verbose_name='角色')),
                ('package_name', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包名称')),
                ('package_location', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包位置')),
                ('branch', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支名称')),
                ('fork', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支来源')),
                ('key', models.CharField(blank=True, max_length=1000, null=True, verbose_name='key')),
                ('aid', models.CharField(blank=True, max_length=1000, null=True, verbose_name='aid')),
                ('title', models.TextField(blank=True, max_length=199, null=True, verbose_name='标题')),
                ('desc', models.TextField(blank=True, max_length=199, null=True, verbose_name='卡包描述')),
                ('sign', models.CharField(blank=True, max_length=199, null=True, verbose_name='标记')),
                ('online', models.SmallIntegerField(choices=[(0, '未上线'), (1, '上线')], default=0, verbose_name='是否上线')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Branch卡包表',
                'verbose_name_plural': 'Branch卡包表',
                'ordering': ['package_name'],
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('card_location', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡片位置')),
                ('package_id', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包id')),
                ('branch', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支')),
                ('package_location', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包位置')),
                ('file_name', models.CharField(blank=True, max_length=199, null=True, verbose_name='文件名称')),
                ('tags', models.SmallIntegerField(choices=[(0, '文本'), (1, '视频'), (2, '测试'), (3, '讨论'), (4, '答案')], default=0, verbose_name='标签')),
                ('c_type', models.SmallIntegerField(choices=[(0, '文件夹'), (1, '文件')], default=0, verbose_name='类型')),
                ('content', models.TextField(blank=True, max_length=1000, null=True, verbose_name='文件内容')),
                ('count', models.IntegerField(blank=True, default=0, null=True, verbose_name='评论次数')),
                ('reset_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='撤销次数')),
                ('commit_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='提交次数')),
                ('status', models.SmallIntegerField(choices=[(0, '无'), (1, '关闭')], default=0, verbose_name='状态')),
                ('index', models.SmallIntegerField(blank=True, default=-1, null=True, verbose_name='index')),
                ('pid', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pid')),
                ('aid', models.CharField(blank=True, max_length=1000, null=True, verbose_name='aid')),
                ('reply_time', models.DateTimeField(blank=True, null=True, verbose_name='回复时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '卡片表',
                'verbose_name_plural': '卡片表',
                'ordering': ['file_name'],
            },
        ),
        migrations.CreateModel(
            name='Card_Action',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('is_favor', models.IntegerField(choices=[(0, '无'), (1, '是')], default=0, verbose_name='是否收藏')),
                ('is_like', models.IntegerField(choices=[(0, '无'), (1, '是')], default=0, verbose_name='是否点赞')),
                ('is_study', models.SmallIntegerField(choices=[(0, '未学习'), (1, '已学习')], default=0, verbose_name='是否学习')),
                ('is_finish', models.SmallIntegerField(choices=[(0, '未学习'), (1, '已学习')], default=0, verbose_name='是否完成')),
                ('view_count', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('score', models.IntegerField(choices=[(0, '无'), (1, '是')], default=0, verbose_name='评分')),
                ('view_duration', models.CharField(blank=True, max_length=199, null=True, verbose_name='最后一次时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_ac', to='api.Card', verbose_name='卡片')),
            ],
            options={
                'verbose_name': '卡片动态表',
                'verbose_name_plural': '卡片动态表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Card_Collect',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(choices=[(0, '无'), (1, '收藏')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cc_card', to='api.Card', verbose_name='卡片收藏')),
            ],
            options={
                'verbose_name': '课程收藏表',
                'verbose_name_plural': '课程收藏表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Card_Comment',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, max_length=199, null=True, verbose_name='评论内容')),
                ('status', models.SmallIntegerField(choices=[(0, '无'), (1, '关闭'), (2, '删除')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_comment', to='api.Card', verbose_name='卡片')),
            ],
            options={
                'verbose_name': '卡片评论表',
                'verbose_name_plural': '卡片评论表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('cover', models.CharField(blank=True, max_length=199, verbose_name='课程封面')),
                ('title', models.CharField(blank=True, max_length=199, null=True, verbose_name='标题')),
                ('subtitle', models.CharField(blank=True, max_length=199, null=True, verbose_name='副标题')),
                ('issue', models.IntegerField(blank=True, null=True, verbose_name='期数')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='课程描述')),
                ('is_fee', models.SmallIntegerField(choices=[(0, '免费'), (1, '收费')], default=1, verbose_name='是否收费')),
                ('price', models.CharField(blank=True, max_length=199, null=True, verbose_name='费用')),
                ('price_url', models.CharField(blank=True, max_length=199, null=True, verbose_name='收费链接')),
                ('is_discuss', models.SmallIntegerField(choices=[(0, '不讨论'), (1, '讨论')], default=1, verbose_name='是否讨论')),
                ('is_homework', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否作业')),
                ('sign', models.CharField(blank=True, max_length=199, null=True, verbose_name='标记')),
                ('is_graduate', models.SmallIntegerField(choices=[(0, '未结业'), (1, '已结业')], default=0, verbose_name='是否结业')),
                ('host', models.CharField(blank=True, max_length=199, null=True, verbose_name='讲师')),
                ('classify', models.CharField(blank=True, max_length=199, null=True, verbose_name='分类')),
                ('start_time', models.CharField(blank=True, max_length=199, null=True, verbose_name='开始时间')),
                ('end_time', models.CharField(blank=True, max_length=199, null=True, verbose_name='结束时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '课程表',
                'verbose_name_plural': '课程表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Master_Package',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('create_type', models.IntegerField(choices=[(0, '个人'), (1, '组织')], default=0, verbose_name='创建类型')),
                ('p_type', models.IntegerField(choices=[(0, '课程'), (1, '作业'), (2, '讨论')], default=0, verbose_name='卡包类型')),
                ('role', models.IntegerField(choices=[(0, '创建者'), (1, '协作者')], default=0, verbose_name='角色')),
                ('package_name', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包名称')),
                ('package_location', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包位置')),
                ('branch', models.CharField(blank=True, default='master', max_length=199, null=True, verbose_name='分支名称')),
                ('fork', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支来源')),
                ('key', models.CharField(blank=True, max_length=1000, null=True, verbose_name='key')),
                ('aid', models.CharField(blank=True, max_length=1000, null=True, verbose_name='aid')),
                ('title', models.TextField(blank=True, max_length=199, null=True, verbose_name='标题')),
                ('desc', models.TextField(blank=True, max_length=199, null=True, verbose_name='卡包描述')),
                ('sign', models.CharField(blank=True, max_length=199, null=True, verbose_name='标记')),
                ('online', models.SmallIntegerField(choices=[(0, '未上线'), (1, '上线')], default=0, verbose_name='是否上线')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='master_course', to='api.Course', verbose_name='课程')),
            ],
            options={
                'verbose_name': 'master卡包表',
                'verbose_name_plural': 'master卡包表',
                'ordering': ['package_name'],
            },
        ),
        migrations.CreateModel(
            name='Merge_Branch_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('branch', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '分支合并记录表',
                'verbose_name_plural': '分支合并记录表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Message_Status',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(choices=[(0, '已读'), (1, '未读')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '消息状态表',
                'verbose_name_plural': '消息状态表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Package_Auth_Info',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('user_type', models.SmallIntegerField(choices=[(0, '个人'), (1, '组织')], default=0, verbose_name='用户类型')),
                ('auth', models.SmallIntegerField(choices=[(0, '只读'), (1, '协作'), (2, '共同拥有')], default=0, verbose_name='权限')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_package', to='api.Branch_Package', verbose_name='卡包')),
            ],
            options={
                'verbose_name': '卡包权限表',
                'verbose_name_plural': '卡包权限表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Short_Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('long_url', models.CharField(blank=True, max_length=199, null=True, verbose_name='长链接')),
                ('short_code', models.CharField(blank=True, max_length=199, null=True, verbose_name='短码')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_url', to='api.Card', verbose_name='视频卡片')),
            ],
            options={
                'verbose_name': '视频链接',
                'verbose_name_plural': '视频链接信息表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='System_Message',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, max_length=1000, null=True, verbose_name='消息')),
                ('content', models.TextField(blank=True, max_length=1000, null=True, verbose_name='内容')),
                ('status', models.SmallIntegerField(choices=[(0, '未读'), (1, '已读')], default=0, verbose_name='状态')),
                ('apply_status', models.SmallIntegerField(choices=[(0, '无'), (1, '同意'), (2, '拒绝')], default=0, verbose_name='申请状态')),
                ('is_apply', models.SmallIntegerField(choices=[(0, '未申请'), (1, '已申请')], default=0, verbose_name='是否申请')),
                ('is_solve', models.SmallIntegerField(choices=[(0, '无'), (1, '未解决'), (2, '已解决')], default=0, verbose_name='是否解决冲突')),
                ('key', models.CharField(blank=True, max_length=199, null=True, verbose_name='协作卡包id')),
                ('card_url', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡片链接')),
                ('card_id', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡片id')),
                ('course_id', models.CharField(blank=True, max_length=199, null=True, verbose_name='课程id')),
                ('card_tags', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡片类型')),
                ('to_userid', models.CharField(blank=True, max_length=199, null=True, verbose_name='对方用户id')),
                ('location', models.CharField(blank=True, max_length=199, null=True, verbose_name='卡包位置')),
                ('type', models.SmallIntegerField(choices=[(0, '系统通知'), (1, '合并通知'), (2, '评论通知')], default=0, verbose_name='通知类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '系统通知表',
                'verbose_name_plural': '系统通知信息表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Branch',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('branch', models.CharField(blank=True, max_length=199, null=True, verbose_name='分支')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('assi_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assi_pac', to='api.Branch_Package', verbose_name='协作卡包')),
                ('create_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crete_pac', to='api.Master_Package', verbose_name='创建卡包')),
            ],
            options={
                'verbose_name': '用户分支',
                'verbose_name_plural': '用户分支信息表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Buy_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('price', models.CharField(blank=True, max_length=199, null=True, verbose_name='价格')),
                ('status', models.SmallIntegerField(choices=[(0, '未付款'), (1, '已付款')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_course', to='api.Course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '用户购买课程信息',
                'verbose_name_plural': '用户购买课程信息表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Course_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('progress', models.CharField(blank=True, max_length=199, null=True, verbose_name='学习进度')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_record', to='api.Course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '用户学习课程记录表',
                'verbose_name_plural': '用户学习课程记录表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Hw_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('is_finish', models.SmallIntegerField(choices=[(0, '未完成'), (1, '已完成')], default=0, verbose_name='状态')),
                ('answer', models.TextField(blank=True, max_length=1000, null=True, verbose_name='答案')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('aw_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hw_card', to='api.Card', verbose_name='答案卡片')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hw_record', to='api.Card', verbose_name='卡片')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phw_record', to='api.Master_Package', verbose_name='卡包')),
            ],
            options={
                'verbose_name': '用户作业记录表',
                'verbose_name_plural': '用户作业记录表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Package_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(choices=[(0, '未学习'), (1, '已学习')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ca_record', to='api.Card', verbose_name='卡片')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_c_record', to='api.Course', verbose_name='课程')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_record', to='api.Master_Package', verbose_name='卡包')),
            ],
            options={
                'verbose_name': '用户卡包记录表',
                'verbose_name_plural': '用户卡包记录表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='User_Study_Record',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('is_study', models.SmallIntegerField(choices=[(0, '未学习'), (1, '已学习')], default=0, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='study_record', to='api.Card', verbose_name='卡片')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pst_record', to='api.Master_Package', verbose_name='卡包')),
            ],
            options={
                'verbose_name': '用户学习记录表',
                'verbose_name_plural': '用户学习记录表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=199, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=19, unique=True, verbose_name='手机号')),
                ('username', models.CharField(blank=True, max_length=59, null=True, unique=True, verbose_name='用户名')),
                ('nickname', models.CharField(blank=True, max_length=59, null=True, verbose_name='昵称')),
                ('head_img', models.TextField(blank=True, null=True, verbose_name='头像')),
                ('role', models.SmallIntegerField(choices=[(0, '普通用户'), (1, '管理员'), (2, '教师'), (3, '协作者')], default=0, verbose_name='角色')),
                ('token', models.CharField(blank=True, max_length=199, null=True, verbose_name='token')),
                ('openid', models.CharField(blank=True, max_length=256, null=True, verbose_name='微信OPENID')),
                ('unionid', models.CharField(blank=True, max_length=128, null=True, verbose_name='微信UNIONID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('type', models.SmallIntegerField(blank=True, choices=[(1, '网站用户'), (2, '小程序用户')], default=1, null=True, verbose_name='验证类型')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='u_user', to=settings.AUTH_USER_MODEL, verbose_name='用户信息')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户列表',
                'ordering': ['-create_time'],
            },
        ),
        migrations.AddField(
            model_name='user_study_record',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_st_card', to='api.UserProfile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='user_package_record',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_record_package', to='api.UserProfile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='user_hw_record',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_hw_record', to='api.UserProfile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='user_course_record',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_course', to='api.UserProfile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='user_buy_record',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_user', to='api.UserProfile', verbose_name='购买用户'),
        ),
        migrations.AddField(
            model_name='user_branch',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ub_user', to='api.UserProfile', verbose_name='协作用户'),
        ),
        migrations.AddField(
            model_name='system_message',
            name='to_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msg_to_user', to='api.UserProfile', verbose_name='接收用户'),
        ),
        migrations.AddField(
            model_name='system_message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='msg_user', to='api.UserProfile', verbose_name='发送用户'),
        ),
        migrations.AddField(
            model_name='package_auth_info',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pai_user', to='api.UserProfile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='message_status',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sy_mess', to='api.System_Message', verbose_name='系统消息'),
        ),
        migrations.AddField(
            model_name='merge_branch_record',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mb_user', to='api.UserProfile', verbose_name='创建用户'),
        ),
        migrations.AddField(
            model_name='merge_branch_record',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mb_package', to='api.Master_Package', verbose_name='卡包'),
        ),
        migrations.AddField(
            model_name='merge_branch_record',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commit_user', to='api.UserProfile', verbose_name='提交用户'),
        ),
        migrations.AddField(
            model_name='master_package',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_user', to='api.UserProfile', verbose_name='创建用户'),
        ),
        migrations.AddField(
            model_name='course',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_user', to='api.UserProfile', verbose_name='创建用户'),
        ),
        migrations.AddField(
            model_name='card_comment',
            name='to_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_user', to='api.UserProfile', verbose_name='@用户'),
        ),
        migrations.AddField(
            model_name='card_comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to='api.UserProfile', verbose_name='评论用户'),
        ),
        migrations.AddField(
            model_name='card_collect',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cc_user', to='api.UserProfile', verbose_name='收藏用户'),
        ),
        migrations.AddField(
            model_name='card_action',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_course', to='api.Course', verbose_name='课程'),
        ),
        migrations.AddField(
            model_name='card_action',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ac_user', to='api.UserProfile', verbose_name='评论用户'),
        ),
        migrations.AddField(
            model_name='card',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_user', to='api.UserProfile', verbose_name='创建用户'),
        ),
        migrations.AddField(
            model_name='branch_package',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_course', to='api.Course', verbose_name='课程'),
        ),
        migrations.AddField(
            model_name='branch_package',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_user', to='api.UserProfile', verbose_name='创建用户'),
        ),
    ]
